{"version":3,"sources":["router/routes.ts","pages/Profile/Profile.tsx","pages/Login/Login.tsx","pages/Registration/Registration.tsx","pages/PasswordRecover/PasswordRecover.tsx","pages/NewPassword/NewPassword.tsx","components/common/Button/Button.tsx","components/common/Checkbox/Checkbox.tsx","components/common/Checkbox/checkboxDemo.tsx","components/common/InputText/InputText.tsx","components/common/EditableSpan/EditableSpan.tsx","components/common/EditableSpan/SvgPen.tsx","components/common/EditableSpan/EditableSpanDemo.tsx","components/common/ImageSlider/ImageSlider.tsx","components/common/ImageSlider/SvgArrowLeft.tsx","components/common/ImageSlider/SvgArrowRight.tsx","components/common/ImageSlider/ImageSliderDemo.tsx","components/common/InputText/InputTextDemo.tsx","components/common/RadioButtons/RadioButtons.tsx","components/common/RadioButtons/RadioButtonsDemo.tsx","components/common/RangeSlider/RangeSlider.tsx","components/common/RangeSlider/RangeSliderDemo.tsx","components/common/Select/Select.tsx","components/common/Select/SelectDemo.tsx","pages/PresenatationPage/PresentationPage.tsx","pages/404/404.tsx","components/Main/Main.tsx","components/Header/Header.tsx","components/Navigation/Navigation.tsx","App/App.tsx","reportWebVitals.ts","pages/Login/loginReducer.ts","pages/NewPassword/newPasswordReducer.ts","pages/PasswordRecover/passwordRecoverReducer.ts","pages/Profile/profileReducer.ts","pages/Registration/registrationReducer.ts","App/AppReducer.ts","store/store.tsx","styles/theme.ts","styles/GlobalStyles.ts","index.tsx"],"names":["routes","Profile","props","Login","Registration","PasswordRecover","NewPassword","Button","restProps","StyledButton","styled","button","theme","color","primary","main","white","light","Checkbox","type","onChange","children","StyledLabel","e","label","grey","shadow","CheckboxDemo","useState","boolean","setBoolean","checked","InputText","onChangeText","onKeyPress","onEnter","error","InputTextWrapper","StyledInput","currentTarget","value","key","StyledError","div","input","font","size","default","family","s1","EditModeInput","EditMOdeOff","StyledSpan","span","StyledSvgPen","height","viewBox","width","xmlns","d","SuperEditableSpan","editMode","deactivateEditMode","activateEditMode","spanProps","autoFocus","onBlur","restSpanProps","className","onDoubleClick","onClick","EditableSpanDemo","text","setText","setError","setEditMode","EditableSpan","newText","ImageSlider","imagesData","currentSlide","setCurrentSlide","imagesQuantity","length","ActiveSlide","index","SliderMain","StyledArrowLeft","StyledArrowRight","map","slide","SlideWrapper","active","StyledImg","src","image","alt","description","id","x","y","xmlSpace","img","SliderData","ImageSliderDemo","InputTextDemo","RadioButtons","name","options","onChangeOption","onChangeCallback","mappedOptions","o","i","RadioContainer","Checkmark","RadioButtonsDemo","arr","RangeSlider","onChangeRange","values","StyledSlider","defaultValue","renderTrack","Track","renderThumb","Thumb","state","StyledTrack","StyledThumb","valueNow","ReactSlider","RangeSliderDemo","setValues","StyledDiv1","StyledDiv2","Select","option","Option","htmlFor","undefined","SelectWrapper","tabIndex","black","SelectDemo","PresentationPage","PresentationWrap","style","display","position","NotFound","MainContentWrap","Main","exact","path","render","Header","HeaderWrap","Navigation","NavigationWrap","LinksList","to","App","MainWrapper","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","loginSlice","createSlice","initialState","reducers","loginReducer","reducer","actions","newPassSlice","newPasswordReducer","passwordRecoverSlice","passwordRecoverReducer","profileSlice","profileReducer","registrationSlice","registrationReducer","appSlice","isTest","testApp","action","payload","appReducer","rootReducer","combineReducers","app","login","newPassword","passwordRecover","profile","registration","store","configureStore","middleware","getDefaultMiddleware","prepend","thunk","primaryColor","secondaryColor","variable","headerHeight","lighten","dark","darken","secondary","100","200","300","400","500","600","700","800","900","source","montserrat","s3","s2","b1","b2","b3","b4","b5","0","1","2","3","effect","glow","mediaQuery","mobileS","mobileM","mobileL","tablet","laptop","laptopL","fourK","GlobalStyles","createGlobalStyle","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9eaed7ba.chunk.js","sourcesContent":["export const routes = {\n    profile: \"/\",\n    login: \"/login\",\n    registration: \"/registration\",\n    notFound: \"/404\",\n    passwordRecover: \"/recover\",\n    newPassword: \"/newPassword\",\n    presentation: \"/presentation\"\n};\n","import React from \"react\";\n\nexport const Profile = (props: any) => {\n    return (\n        <>\n            <h1>Profile</h1>\n        </>\n    );\n};\n","import React from \"react\";\n\nexport const Login = (props: any) => {\n    return (\n        <>\n            <h1>Login</h1>\n        </>\n    );\n};\n","import React from \"react\";\n\nexport const Registration = (props: any) => {\n    return (\n        <>\n            <h1>Registration</h1>\n        </>\n    );\n};\n","import React from \"react\";\n\nexport const PasswordRecover = (props: any) => {\n    return (\n        <>\n            <h1>Password Recover</h1>\n        </>\n    );\n};\n","import React from \"react\";\n\nexport const NewPassword = (props: any) => {\n    return (\n        <>\n            <h1>New Password</h1>\n        </>\n    );\n};\n","import React, { ButtonHTMLAttributes, DetailedHTMLProps } from \"react\";\nimport styled, { StyledComponentProps } from \"styled-components/macro\";\nimport { ThemeType } from \"../../../styles/theme\";\n\n// тип пропсов обычной кнопки\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype PropsType = DefaultButtonPropsType;\n\nexport const Button: React.FC<PropsType> = ({ ...restProps }) => {\n    return <StyledButton {...restProps} />;\n};\n\n// Styles\nconst StyledButton = styled.button<StyledComponentProps<any, ThemeType, any, any>>`\n    border: none;\n    cursor: pointer;\n    background-color: ${({ theme }) => theme.color.primary.main};\n    color: ${({ theme }) => theme.color.white};\n    padding: 0.5rem 1rem;\n\n    &:hover {\n        background-color: ${({ theme }) => theme.color.primary.light};\n    }\n`;\n","import React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes } from \"react\";\nimport styled from \"styled-components/macro\";\n\nexport const Checkbox: React.FC<PropsType> = (props) => {\n    const { type, onChange, children, ...restProps } = props;\n\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange(e);\n    };\n\n    return (\n        <StyledLabel>\n            <input type={\"checkbox\"} onChange={onChangeCallback} {...restProps} />\n            <span>{children}</span>\n        </StyledLabel>\n    );\n};\n\n// Styles\nconst StyledLabel = styled.label<any>`\n    // Общие стили чекбокса\n    cursor: pointer;\n\n    display: flex;\n    align-items: center;\n\n    // Стили для элемента input c type=\"checkbox\". Тут убираеться дефолтный чекбокс\n    & > input {\n        position: absolute;\n        z-index: -1;\n        opacity: 0;\n    }\n\n    // Стили для текста чекбокса\n    & > span {\n        display: inline-flex;\n        align-items: center;\n        user-select: none;\n    }\n\n    // Стили коробки (кнопки) чекбокса\n    & > span::before {\n        content: \"\";\n        display: inline-block;\n        width: 16px;\n        height: 16px;\n        flex-shrink: 0;\n        flex-grow: 0;\n        border: 1px solid ${({ theme }) => theme.color.grey[\"500\"]};\n        margin-right: 0.5em;\n        background-repeat: no-repeat;\n        background-position: center center;\n        background-size: 50% 50%;\n    }\n\n    // стили при наведении курсора на checkbox\n    & > input:not(:disabled):not(:checked) + span:hover::before {\n        border-color: ${({ theme }) => theme.color.grey[\"500\"]}; // 183\n    }\n\n    // стили для активного чекбокса (при нажатии на него)\n    & > input:not(:disabled):active + span::before {\n        background-color: ${({ theme }) => theme.color.grey[\"500\"]};\n        border-color: ${({ theme }) => theme.color.grey[\"700\"]};\n    }\n\n    // стили для чекбокса, находящегося в фокусе\n    & > input:focus + span::before {\n        box-shadow: ${({ theme }) => theme.shadow[\"0\"]};\n    }\n\n    // стили для чекбокса, находящегося в фокусе и не находящегося в состоянии checked\n    & > input:focus:not(:checked) + span::before {\n        border-color: ${({ theme }) => theme.color.grey[\"700\"]};\n    }\n\n    // стили для чекбокса, находящегося в состоянии checked\n    & > input:checked + span::before {\n        border-color: ${({ theme }) => theme.color.primary.main};\n        background-color: ${({ theme }) => theme.color.primary.main};\n        background-size: 65% 65%;\n        background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3e%3c/svg%3e\");\n    }\n\n    // стили для чекбокса, находящегося в состоянии disabled\n    & > input:disabled + span::before {\n        background-color: ${({ theme }) => theme.color.grey[\"700\"]};\n    }\n`;\n\n// Types\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype PropsType = DefaultInputPropsType & {\n    onChange: (event: ChangeEvent<HTMLInputElement>) => void;\n    children: string; // Checkbox text\n};\n","import { Checkbox } from \"./Checkbox\";\nimport React, { useState } from \"react\";\n\nexport const CheckboxDemo = () => {\n    const [boolean, setBoolean] = useState(false);\n\n    const changeCheckboxStatus = () => {\n        setBoolean(!boolean);\n    };\n\n    return (\n        <Checkbox onChange={changeCheckboxStatus} checked={boolean}>\n            Checkbox text\n        </Checkbox>\n    );\n};\n","import React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent } from \"react\";\nimport styled, { StyledComponentProps } from \"styled-components/macro\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & {\n    // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void;\n    onEnter?: () => void;\n    error?: string;\n};\n\nexport const InputText: React.FC<SuperInputTextPropsType> = ({\n    type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n    onChange,\n    onChangeText,\n    onKeyPress,\n    onEnter,\n    error,\n\n    ...restProps // все остальные пропсы попадут в объект restProps\n}) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && // если есть пропс onChange\n            onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value);\n    };\n\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" && // если нажата кнопка Enter\n            onEnter && // и есть пропс onEnter\n            onEnter(); // то вызвать его\n    };\n\n    return (\n        <InputTextWrapper>\n            <StyledInput\n                type={\"text\"}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            <StyledError>{error && <span>{error}</span>}</StyledError>\n        </InputTextWrapper>\n    );\n};\n\nconst InputTextWrapper = styled.div`\n    position: relative;\n\n    width: 100%;\n`;\n\nconst StyledInput = styled.input<StyledComponentProps<any, any, any, any>>`\n    // Общие стили инпута\n\n    padding: 1rem 0.5rem;\n    margin-bottom: 20px;\n\n    height: 20px;\n    width: 100%;\n\n    font-size: ${({ theme }) => theme.font.size.default};\n    font-family: ${({ theme }) => theme.font.family.default};\n\n    border: 1px solid rgb(109, 109, 109);\n`;\n// Стили контейнера с ошибкой\nconst StyledError = styled.div`\n    position: absolute;\n    bottom: 1px;\n\n    // Стили текста ошибки\n    & > span {\n        font-size: ${({ theme }) => theme.font.size.s1};\n        color: red;\n    }\n`;\n","import React, { DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes } from \"react\";\nimport { InputText } from \"../InputText/InputText\";\nimport { SvgPen } from \"./SvgPen\";\nimport styled, { StyledComponentProps } from \"styled-components/macro\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & {\n    // и + ещё пропсы которых нет в стандартном инпуте\n    value: string;\n    onChangeText: (value: string) => void;\n    editMode: boolean;\n    deactivateEditMode: () => void;\n    activateEditMode: () => void;\n    error?: string;\n\n    spanProps?: DefaultSpanPropsType; // пропсы для спана\n};\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (props) => {\n    const {\n        value,\n        onChangeText,\n        editMode,\n        deactivateEditMode,\n        activateEditMode,\n        error,\n        autoFocus, // Ignore autoFocus\n        onBlur,\n        spanProps,\n\n        ...restProps\n    } = props;\n\n    const { children, className, ...restSpanProps } = spanProps || {};\n\n    return (\n        <>\n            {editMode ? (\n                <EditModeInput\n                    autoFocus // autoFocus is always true\n                    onChangeText={onChangeText}\n                    onBlur={deactivateEditMode}\n                    onEnter={deactivateEditMode}\n                    error={error}\n                    value={value}\n                    {...restProps} // The rest of the props include value\n                />\n            ) : (\n                <EditMOdeOff>\n                    <StyledSpan onDoubleClick={activateEditMode} {...restSpanProps}>\n                        {value}\n                    </StyledSpan>\n                    <StyledSvgPen onClick={activateEditMode} className={\"StyledSvgPen\"} />\n                </EditMOdeOff>\n            )}\n        </>\n    );\n};\n\nconst EditModeInput = styled(InputText)<StyledComponentProps<any, any, any, any>>`\n    //margin: 0;\n    padding: 0;\n\n    height: 20px;\n\n    border: none;\n    border-radius: 0;\n\n    border-bottom: 1px solid ${({ theme }) => theme.color.grey[\"400\"]};\n\n    box-shadow: none;\n    outline: none;\n\n    line-height: 0;\n`;\n\nconst EditMOdeOff = styled.div<StyledComponentProps<any, any, any, any>>`\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n\n    margin-bottom: 20px;\n\n    width: 100%;\n    height: 20px;\n`;\n\nconst StyledSpan = styled.span<StyledComponentProps<any, any, any, any>>`\n    padding-right: 10px;\n\n    &:hover ~ .StyledSvgPen {\n        fill: ${({ theme }) => theme.color.grey[\"500\"]};\n    }\n`;\n\nconst StyledSvgPen = styled(SvgPen)<StyledComponentProps<any, any, any, any>>`\n    fill: transparent;\n    &:hover {\n        fill: ${({ theme }) => theme.color.primary.main};\n        cursor: pointer;\n    }\n`;\n\nexport default SuperEditableSpan;\n","import * as React from \"react\";\n\nexport function SvgPen(props: React.SVGProps<SVGSVGElement>) {\n    return (\n        <svg height=\"15px\" viewBox=\"0 0 325 325.375\" width=\"15px\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n            <path d=\"M114.688 284.676l-73.801-73.801 178.5-178.5 73.8 73.8zm-80.7-60.801l67.7 67.7-101.5 33.8zm281.899-140.3l-12.801 12.8-73.899-73.898 12.801-12.801c12.895-12.903 33.805-12.903 46.7 0l27.199 27.199c12.8 12.937 12.8 33.766 0 46.7zm0 0\" />\n        </svg>\n    );\n}\n","import React, { useState } from \"react\";\nimport EditableSpan from \"./EditableSpan\";\n\nexport const EditableSpanDemo = () => {\n    const [text, setText] = useState(\"Random text\");\n    const [error, setError] = useState(\"\");\n    const [editMode, setEditMode] = useState<boolean>(false);\n\n    const changeText = (newText: string) => {\n        setText(newText);\n    };\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    };\n\n    const deactivateEditMode = () => {\n        if (text === \"\") {\n            setError(\"The value must not be empty\");\n        } else {\n            setError(\"\");\n            setEditMode(false);\n        }\n    };\n\n    return (\n        <EditableSpan\n            onChangeText={changeText}\n            deactivateEditMode={deactivateEditMode}\n            activateEditMode={activateEditMode}\n            value={text}\n            editMode={editMode}\n            error={error}\n        />\n    );\n};\n","import React, { useState } from \"react\";\nimport { SliderDataType } from \"./ImageSliderDemo\";\nimport { SvgArrowLeft } from \"./SvgArrowLeft\";\nimport { SvgArrowRight } from \"./SvgArrowRight\";\nimport styled, { StyledComponentProps } from \"styled-components/macro\";\nimport { ThemeType } from \"../../../styles/theme\";\n\n// Component\nexport const ImageSlider: React.FC<ImageSliderProps> = (props) => {\n    // Props\n    const { imagesData } = props;\n\n    const [currentSlide, setCurrentSlide] = useState(0);\n    const imagesQuantity: number = imagesData.length;\n\n    const nextSlide = () => {\n        setCurrentSlide(currentSlide === imagesQuantity - 1 ? 0 : currentSlide + 1);\n    };\n\n    const prevSlide = () => {\n        setCurrentSlide(currentSlide === 0 ? imagesQuantity - 1 : currentSlide - 1);\n    };\n\n    const ActiveSlide = (index: number) => {\n        return index === currentSlide;\n    };\n\n    return (\n        <SliderMain>\n            <StyledArrowLeft onClick={prevSlide} />\n            <StyledArrowRight onClick={nextSlide} />\n            {imagesData.map((slide, index) => {\n                return (\n                    <SlideWrapper key={index} active={ActiveSlide(index)}>\n                        {index === currentSlide && <StyledImg src={slide.image} alt={slide.description} />}\n                    </SlideWrapper>\n                );\n            })}\n        </SliderMain>\n    );\n};\n\n// Styles\n\nconst SliderMain = styled.div`\n    position: relative;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    height: 200px;\n    width: 75%;\n`;\n\nconst StyledArrowLeft = styled(SvgArrowLeft)`\n    cursor: pointer;\n    position: absolute;\n    top: 45%;\n    left: -15%;\n    z-index: 100;\n`;\n\nconst StyledArrowRight = styled(SvgArrowRight)`\n    cursor: pointer;\n    position: absolute;\n    top: 45%;\n    right: -15%;\n    z-index: 100;\n`;\n\nconst SlideWrapper = styled.div<StyledComponentProps<any, ThemeType, { active: boolean }, any>>`\n    opacity: ${(props) => (props.active ? 1 : 0)};\n    transform: ${(props) => (props.active ? \"scale(1.08)\" : \"\")};\n    transition-duration: 1s;\n\n    height: inherit;\n`;\n\nconst StyledImg = styled.img`\n    height: inherit;\n    width: 100%;\n\n    box-shadow: ${({ theme }) => theme.shadow[\"1\"]};\n\n    user-select: none;\n    object-fit: cover;\n`;\n\n// Types\ntype ImageSliderProps = {\n    imagesData: SliderDataType;\n};\n","import * as React from \"react\";\n\nexport function SvgArrowLeft(props: React.SVGProps<SVGSVGElement>) {\n    return (\n        <svg\n            id=\"ArrowLeft\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            x={0}\n            y={0}\n            width={30}\n            height={30}\n            viewBox=\"0 0 306 306\"\n            xmlSpace=\"preserve\"\n            {...props}\n        >\n            <path d=\"M247.35 35.7L211.65 0l-153 153 153 153 35.7-35.7L130.05 153z\" />\n        </svg>\n    );\n}\n","import * as React from \"react\";\n\nexport function SvgArrowRight(props: React.SVGProps<SVGSVGElement>) {\n    return (\n        <svg\n            id=\"ArrowRight\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            x={0}\n            y={0}\n            width={30}\n            height={30}\n            viewBox=\"0 0 306 306\"\n            xmlSpace=\"preserve\"\n            {...props}\n        >\n            <path d=\"M94.35 0l-35.7 35.7L175.95 153 58.65 270.3l35.7 35.7 153-153z\" />\n        </svg>\n    );\n}\n","import { ImageSlider } from \"./ImageSlider\";\n\n// Data\nconst SliderData = [\n    {\n        id: 1,\n        image:\n            \"https://images.unsplash.com/photo-1617107374365-442a6876ed0a?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1951&q=80\",\n        description: \"Image 1\"\n    },\n    {\n        id: 2,\n        image:\n            \"https://images.unsplash.com/photo-1617033332334-1e51884abd51?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=975&q=80\",\n        description: \"Image 2\"\n    },\n    {\n        id: 3,\n        image:\n            \"https://images.unsplash.com/photo-1617118658610-916b54a8c334?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1952&q=80\",\n        description: \"Image 3\"\n    },\n    {\n        id: 4,\n        image:\n            \"https://images.unsplash.com/photo-1593642532400-2682810df593?ixid=MXwxMjA3fDF8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1950&q=80\",\n        description: \"Image 4\"\n    }\n];\n\n// Component\nexport const ImageSliderDemo = () => {\n    return <ImageSlider imagesData={SliderData} />;\n};\n\n// Types\nexport type SliderDataType = typeof SliderData;\n","import { InputText } from \"./InputText\";\nimport React, { useState } from \"react\";\n\nexport const InputTextDemo = () => {\n    const [text, setText] = useState(\"\");\n    const [error, setError] = useState(\"\");\n\n    const changeText = (newText: string) => {\n        setText(newText);\n    };\n\n    // if the value is empty displays error\n    const checkValue = () => {\n        if (text === \"\") {\n            setError(\"The value must not be empty\");\n        } else {\n            if (error !== \"\") {\n                setError(\"\");\n            }\n        }\n    };\n\n    return <InputText onChangeText={changeText} onEnter={checkValue} value={text} error={error} />;\n};\n","import React, { ChangeEvent, InputHTMLAttributes, DetailedHTMLProps } from \"react\";\nimport styled from \"styled-components/macro\";\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype PropsType = DefaultRadioPropsType & {\n    options?: any[];\n    onChangeOption?: (option: any) => void;\n};\n\nexport const RadioButtons: React.FC<PropsType> = ({\n    type,\n    name,\n    options,\n    value,\n    onChange,\n    onChangeOption,\n    ...restProps\n}) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        if (onChangeOption) {\n            onChangeOption(e.currentTarget.value);\n        }\n    };\n\n    const mappedOptions: any[] = options\n        ? options.map((o, i) => (\n              <RadioContainer key={name + \"-\" + i}>\n                  <span>{o}</span>\n                  <input\n                      name={name}\n                      type={\"radio\"}\n                      value={o}\n                      onChange={onChangeCallback}\n                      checked={value === o}\n                      {...restProps}\n                  />\n                  <Checkmark className={\"checkmark\"} />\n              </RadioContainer>\n          ))\n        : [];\n\n    return <>{mappedOptions}</>;\n};\n\nconst RadioContainer = styled.label`\n    // The container\n    position: relative;\n\n    display: block;\n\n    padding-left: 25px;\n    padding-right: 15px;\n    margin-bottom: 12px;\n\n    cursor: pointer;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n\n    // Hide the browser's default radio button\n    & input {\n        position: absolute;\n\n        opacity: 0;\n        cursor: pointer;\n    }\n\n    // On mouse-over, add a background color\n    &:hover input ~ .checkmark {\n        background-color: ${({ theme }) => theme.color.grey[\"400\"]};\n    }\n\n    // When the radio button is checked, add a blue background\n    & input:checked ~ .checkmark {\n        background-color: ${({ theme }) => theme.color.primary.main};\n    }\n\n    // Show the indicator (dot/circle) when checked\n    & input:checked ~ .checkmark:after {\n        display: block;\n    }\n\n    // Style the indicator (dot/circle)\n    & .checkmark:after {\n        top: 5px;\n        left: 5px;\n\n        width: 6px;\n        height: 6px;\n\n        border-radius: 50%;\n        background: ${({ theme }) => theme.color.white};\n    }\n`;\n\nconst Checkmark = styled.div`\n    // Create a custom radio button\n    position: absolute;\n    bottom: 2px;\n    left: 0;\n\n    height: 16px;\n    width: 16px;\n\n    background-color: ${({ theme }) => theme.color.grey[\"400\"]};\n    border-radius: 50%;\n\n    // Create the indicator (the dot/circle - hidden when not checked)\n    &:after {\n        content: \"\";\n        position: absolute;\n        display: none;\n    }\n`;\n","import { RadioButtons } from \"./RadioButtons\";\nimport React, { useState } from \"react\";\n\nexport const RadioButtonsDemo = () => {\n    const arr = [\"One\", \"Two\", \"Three\"];\n    const [value, onChangeOption] = useState(arr[0]);\n\n    return <RadioButtons options={arr} value={value} onChangeOption={onChangeOption} />;\n};\n","import React from \"react\";\nimport ReactSlider from \"react-slider\";\nimport styled from \"styled-components/macro\";\n\ntype SuperDoubleRangePropsType = {\n    onChangeRange?: any;\n    values?: any;\n    // min, max, step, disable, ...\n};\n\nexport const RangeSlider: React.FC<SuperDoubleRangePropsType> = ({\n    onChangeRange,\n    values\n    // min, max, step, disable, ...\n}) => {\n    // сделать самому, можно подключать библиотеки\n\n    return <StyledSlider defaultValue={values} onChange={onChangeRange} renderTrack={Track} renderThumb={Thumb} />;\n};\n\nconst Track = (props: any, state: any) => <StyledTrack {...props} index={state.index} />;\nconst Thumb = (props: any, state: any) => <StyledThumb {...props}>{state.valueNow}</StyledThumb>;\n\n// Styles\n\nconst StyledSlider = styled(ReactSlider)`\n    width: 100%;\n    height: 2px;\n`;\n\nconst StyledTrack = styled.div`\n    border-radius: 2px;\n    background: ${({ theme }) => theme.color.primary.light};\n    height: 2px;\n`;\n\nconst StyledThumb = styled.div`\n    outline: none;\n    height: 15px;\n    width: 15px;\n    background-color: ${({ theme }) => theme.color.primary.main};\n    margin-top: -6.5px;\n    border-radius: 50%;\n    cursor: grab;\n    color: transparent;\n`;\n","import { RangeSlider } from \"./RangeSlider\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components/macro\";\n\nexport const RangeSliderDemo = () => {\n    const [values, setValues] = useState([0, 100]);\n    const changeRangeInputValues = (values: Array<number>) => {\n        setValues(values);\n    };\n\n    return (\n        <>\n            <StyledDiv1>Value: {values[0]}</StyledDiv1>\n            <StyledDiv2>Value: {values[1]}</StyledDiv2>\n\n            <RangeSlider values={values} onChangeRange={changeRangeInputValues} />\n        </>\n    );\n};\n\n// Styles\n\nconst StyledDiv1 = styled.div`\n    position: absolute;\n    top: 30px;\n    left: 30px;\n`;\n\nconst StyledDiv2 = styled.div`\n    position: absolute;\n    top: 30px;\n    right: 30px;\n`;\n","import React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes } from \"react\";\nimport styled, { StyledComponentProps } from \"styled-components/macro\";\n\ntype DefaultSelectPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options?: any[] | undefined;\n    onChangeOption?: (option: any) => void;\n};\n\nexport const Select: React.FC<SuperSelectPropsType> = ({ options, onChangeOption, value, ...restProps }) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        if (onChangeOption) {\n            onChangeOption(e.currentTarget.value);\n        }\n    };\n\n    const mappedOptions: any[] | undefined = options\n        ? options.map((option) => {\n              return (\n                  <>\n                      <StyledInput\n                          key={option}\n                          onChange={onChangeCallback}\n                          name=\"test\"\n                          type=\"radio\"\n                          id={option}\n                          value={option}\n                          checked={value === option}\n                          {...restProps}\n                      />\n                      <Option className={\"option\"} htmlFor={option}>\n                          {option}\n                      </Option>\n                  </>\n              );\n          })\n        : undefined;\n\n    return <SelectWrapper tabIndex={1}>{mappedOptions}</SelectWrapper>;\n};\n\n// Styles\nconst SelectWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n\n    position: relative;\n\n    width: 250px;\n    height: 40px;\n    outline: none;\n\n    cursor: pointer;\n\n    &:focus {\n        box-shadow: none;\n\n        & .option {\n            position: relative;\n\n            pointer-events: all;\n        }\n    }\n`;\n\nconst Option = styled.label`\n    display: flex;\n    align-items: center;\n\n    box-sizing: border-box;\n    position: absolute;\n    top: 0;\n    z-index: 1;\n\n    width: 100%;\n\n    padding: 0 30px 0 10px;\n\n    min-height: 40px;\n\n    background: ${({ theme }) => theme.color.grey[\"200\"]};\n    color: ${({ theme }) => theme.color.black};\n    border: none;\n    border-top: ${({ theme }) => theme.color.primary.light} solid 1px;\n\n    pointer-events: none;\n    order: 2;\n    transition: background 0.4s ease-in-out;\n    overflow: hidden;\n    white-space: nowrap;\n    cursor: pointer;\n\n    &:hover {\n        color: ${({ theme }) => theme.color.white};\n        background: ${({ theme }) => theme.color.primary.main};\n    }\n`;\n\nconst StyledInput = styled.input<StyledComponentProps<any, any, any, any>>`\n    position: absolute;\n    left: -99999px;\n\n    opacity: 0;\n\n    // Active value\n    &:checked + label {\n        order: 1;\n        position: relative;\n        z-index: 2;\n\n        background: ${({ theme }) => theme.color.grey[\"200\"]};\n        border-top: none;\n\n        &:hover {\n            color: ${({ theme }) => theme.color.white};\n            background: ${({ theme }) => theme.color.primary.main};\n        }\n    }\n\n    // Arrow\n    &:checked + label:after {\n        content: \"\";\n\n        position: absolute;\n        right: 15px;\n        top: calc(50% - 2.5px);\n        z-index: 3;\n\n        width: 0;\n        height: 0;\n\n        border-left: 5px solid transparent;\n        border-right: 5px solid transparent;\n        border-top: 5px solid white;\n        pointer-events: none;\n    }\n\n    // Square containing the arrow\n    &:checked + label:before {\n        content: \"\";\n\n        position: absolute;\n        right: 0;\n\n        height: 40px;\n        width: 40px;\n\n        background: ${({ theme }) => theme.color.primary.main};\n    }\n`;\n","import { Select } from \"./Select\";\nimport React, { useState } from \"react\";\n\nexport const SelectDemo = () => {\n    const arr = [\"One\", \"Two\", \"Three\"];\n    const [value, onChangeOption] = useState(arr[1]);\n\n    return <Select options={arr} value={value} onChangeOption={onChangeOption} />;\n};\n","import React from \"react\";\nimport { Button } from \"../../components/common/Button/Button\";\nimport { CheckboxDemo } from \"../../components/common/Checkbox/checkboxDemo\";\nimport { EditableSpanDemo } from \"../../components/common/EditableSpan/EditableSpanDemo\";\nimport { ImageSliderDemo } from \"../../components/common/ImageSlider/ImageSliderDemo\";\nimport { InputTextDemo } from \"../../components/common/InputText/InputTextDemo\";\nimport { RadioButtonsDemo } from \"../../components/common/RadioButtons/RadioButtonsDemo\";\nimport { RangeSliderDemo } from \"../../components/common/RangeSlider/RangeSliderDemo\";\nimport { SelectDemo } from \"../../components/common/Select/SelectDemo\";\nimport styled from \"styled-components/macro\";\n\nexport const PresentationPage = () => {\n    return (\n        <>\n            <PresentationWrap>\n                <div>\n                    <Button>Custom button</Button>\n                </div>\n                <CheckboxDemo></CheckboxDemo>\n                <EditableSpanDemo></EditableSpanDemo>\n                <ImageSliderDemo></ImageSliderDemo>\n                <InputTextDemo></InputTextDemo>\n                <div style={{ display: \"flex\" }}>\n                    <RadioButtonsDemo></RadioButtonsDemo>\n                </div>\n                <div style={{ position: \"relative\" }}>\n                    <RangeSliderDemo></RangeSliderDemo>\n                </div>\n                <SelectDemo></SelectDemo>\n            </PresentationWrap>\n        </>\n    );\n};\n\nconst PresentationWrap = styled.div`\n    display: flex;\n    flex-flow: column nowrap;\n\n    * {\n        margin-bottom: 15px;\n    }\n`;\n","import React from \"react\";\n\nexport const NotFound = (props: any) => {\n    return (\n        <>\n            <h1>404</h1>\n        </>\n    );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { routes } from \"../../router/routes\";\nimport { Profile } from \"../../pages/Profile/Profile\";\nimport { Login } from \"../../pages/Login/Login\";\nimport { Registration } from \"../../pages/Registration/Registration\";\nimport { PasswordRecover } from \"../../pages/PasswordRecover/PasswordRecover\";\nimport { NewPassword } from \"../../pages/NewPassword/NewPassword\";\nimport { PresentationPage } from \"../../pages/PresenatationPage/PresentationPage\";\nimport { NotFound } from \"../../pages/404/404\";\n\nconst MainContentWrap = styled.div`\n    padding: 25px 15px;\n    grid-area: content;\n    width: 100%;\n    height: 100%;\n`;\n\nexport const Main = () => {\n    return (\n        <MainContentWrap>\n            <Switch>\n                <Route exact path={routes.profile} render={() => <Profile />} />\n                <Route exact path={routes.login} render={() => <Login />} />\n                <Route exact path={routes.registration} render={() => <Registration />} />\n                <Route exact path={routes.passwordRecover} render={() => <PasswordRecover />} />\n                <Route exact path={routes.newPassword} render={() => <NewPassword />} />\n                <Route exact path={routes.presentation} render={() => <PresentationPage />} />\n                <Route render={() => <NotFound />} />\n            </Switch>\n        </MainContentWrap>\n    );\n};\n","import React from \"react\";\nimport styled from \"styled-components/macro\";\n\nexport const Header = (props: any) => {\n    return (\n        <HeaderWrap>\n            <h1>Header</h1>\n        </HeaderWrap>\n    );\n};\n\n// Styles\nconst HeaderWrap = styled.div`\n    grid-area: header;\n    width: 100%;\n    background-color: #0000ff91;\n`;\n","import React from \"react\";\nimport styled from \"styled-components/macro\";\nimport { NavLink } from \"react-router-dom\";\nimport { routes } from \"../../router/routes\";\n\nexport const Navigation = (props: any) => {\n    return (\n        <NavigationWrap>\n            <h1>Navigation</h1>\n            <LinksList>\n                <NavLink to={routes.profile}>Profile</NavLink>\n                <NavLink to={routes.login}>Login</NavLink>\n                <NavLink to={routes.registration}>Registration</NavLink>\n                <NavLink to={routes.passwordRecover}>Password Recover</NavLink>\n                <NavLink to={routes.newPassword}>New Password</NavLink>\n                <NavLink to={routes.presentation}>Presentation</NavLink>\n            </LinksList>\n        </NavigationWrap>\n    );\n};\n\n// styles\nconst NavigationWrap = styled.div`\n    grid-area: navigation;\n    width: 100%;\n    height: 100vh;\n    background-color: #ff9800;\n`;\n\nconst LinksList = styled.div`\n    display: flex;\n    align-items: flex-start;\n    justify-content: flex-end;\n    flex-flow: column nowrap;\n    a {\n        margin-bottom: 10px;\n        color: blue;\n        &:last-child {\n            margin-bottom: 0;\n        }\n    }\n`;\n","import React from \"react\";\nimport { Main } from \"../components/Main/Main\";\nimport { Header } from \"../components/Header/Header\";\nimport { Navigation } from \"../components/Navigation/Navigation\";\nimport styled from \"styled-components\";\n\nfunction App() {\n\n    return (\n        <div>\n            <MainWrapper>\n                <Header />\n                <Navigation />\n                <Main />\n            </MainWrapper>\n        </div>\n    );\n}\n\nexport default App;\n\n// Styles\nconst MainWrapper = styled.div`\n    display: grid;\n    grid-template-columns: 15% 1fr 1fr 1fr;\n    grid-template-rows: auto;\n    grid-template-areas:\n        \"header header header header\"\n        \"navigation content content content\"\n        \"navigation content content content\";\n`;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport type InitialStateT = any;\n\nexport const initialState: InitialStateT = {};\n\nconst loginSlice = createSlice({\n    name: \"login\",\n    initialState,\n    reducers: {}\n});\n\nexport const loginReducer = loginSlice.reducer;\n\n// * Action creators\n\nexport const {} = loginSlice.actions;\n\n// * Thunks\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport type InitialStateT = any;\n\nexport const initialState: InitialStateT = {};\n\nconst newPassSlice = createSlice({\n    name: \"newPassword\",\n    initialState,\n    reducers: {}\n});\n\nexport const newPasswordReducer = newPassSlice.reducer;\n\n// * Action creators\nexport const {} = newPassSlice.actions;\n\n// * Thunks Creators\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport type InitialStateT = any;\n\nexport const initialState: InitialStateT = {};\n\nconst passwordRecoverSlice = createSlice({\n    name: \"passwordRecover\",\n    initialState,\n    reducers: {}\n});\n\nexport const passwordRecoverReducer = passwordRecoverSlice.reducer;\n\n// * Action creators\nexport const {} = passwordRecoverSlice.actions;\n\n// * Thunks Creators\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport type InitialStateT = any;\n\nexport const initialState: InitialStateT = {};\n\nconst profileSlice = createSlice({\n    name: \"profile\",\n    initialState,\n    reducers: {}\n});\n\nexport const profileReducer = profileSlice.reducer;\n\n// * Action creators\n\nexport const {} = profileSlice.actions;\n\n// * Thunks Creators\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport type InitialStateT = any;\n\nexport const initialState: InitialStateT = {};\n\nconst registrationSlice = createSlice({\n    name: \"registration\",\n    initialState,\n    reducers: {}\n});\n\nexport const registrationReducer = registrationSlice.reducer;\n\n// * Action creators\nexport const {} = registrationSlice.actions;\n// * Thunks Creators\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\n\nexport type InitialStateT = any;\n\nexport const initialState: InitialStateT = {\n    isTest: false\n};\n\nconst appSlice = createSlice({\n    name: \"app\",\n    initialState,\n    reducers: {\n        testApp(state, action: PayloadAction<{isTest: boolean}>) {\n            state.isTest = action.payload.isTest;\n        }\n    }\n});\n\nexport const appReducer = appSlice.reducer;\n\n// * Actions\nexport const {testApp} = appSlice.actions;\n\n// * Thunks\n","import { combineReducers, Action } from \"redux\";\nimport thunk, { ThunkAction } from \"redux-thunk\";\nimport { loginReducer } from \"../pages/Login/loginReducer\";\nimport { newPasswordReducer } from \"../pages/NewPassword/newPasswordReducer\";\nimport { passwordRecoverReducer } from \"../pages/PasswordRecover/passwordRecoverReducer\";\nimport { profileReducer } from \"../pages/Profile/profileReducer\";\nimport { registrationReducer } from \"../pages/Registration/registrationReducer\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport {appReducer} from \"../App/AppReducer\";\n\nexport type AppRootStateT = ReturnType<typeof rootReducer>;\n/*\n * In a AppThunkT  is a action or actions what you want to use\n * Each reducer has it own actions\n * */\nexport type AppThunkT<A extends Action> = ThunkAction<void, AppRootStateT, unknown, A>;\nexport type AppDispatchT = typeof store.dispatch;\n\nconst rootReducer = combineReducers({\n    app: appReducer,\n    login: loginReducer,\n    newPassword: newPasswordReducer,\n    passwordRecover: passwordRecoverReducer,\n    profile: profileReducer,\n    registration: registrationReducer\n});\n\nexport const store = configureStore({\n    reducer: rootReducer,\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware().prepend(thunk)\n});\n","import { darken, lighten } from \"polished\";\nimport { keyframes } from \"styled-components/macro\";\n\nexport type ThemeType = typeof theme;\n\nconst primaryColor = \"#ed6e6e\";\nconst secondaryColor = \"#edba6e\";\n\nexport const theme = {\n    variable: {\n        headerHeight: \"120px\"\n    },\n    color: {\n        primary: {\n            main: primaryColor,\n            light: `${lighten(0.1, primaryColor)}`,\n            dark: `${darken(0.1, primaryColor)}`\n        },\n        secondary: {\n            main: secondaryColor,\n            light: `${lighten(0.1, secondaryColor)}`,\n            dark: `${darken(0.1, secondaryColor)}`\n        },\n        grey: {\n            100: \"#f5f5f5\",\n            200: \"#eeeeee\",\n            300: \"#e0e0e0\",\n            400: \"#bdbdbd\",\n            500: \"#9e9e9e\",\n            600: \"#757575\",\n            700: \"#616161\",\n            800: \"#424242\",\n            900: \"#212121\"\n        },\n        black: \"#1a1a1a\",\n        white: \"#e9e9e9\",\n        error: \"#cf1313\"\n    },\n    font: {\n        source: `https://fonts.googleapis.com/css2?family=Montserrat:wght@600&family=Roboto&display=swap`,\n        family: {\n            default: `'Roboto', sans-serif;`,\n            montserrat: `'Montserrat', sans-serif;`\n        },\n        size: {\n            s3: \"0.512rem\", // 8.19px\n            s2: \"0.64rem\", // 10.24px\n            s1: \"0.8rem\", // 12.80px\n            default: \"16px\", // https://type-scale.com/ - Major third\n            b1: \"1.25rem\", // 20.00px\n            b2: \"1.563rem\", // 25.00px\n            b3: \"1.953rem\", // 31.25px\n            b4: \"2.441rem\", // 39.06px\n            b5: \"3.052rem\" // 48.83px\n        }\n    },\n    shadow: {\n        0: \"none\",\n        1: \"2px 2px 5px rgba(0,0,0,0.2)\",\n        2: \"2px 2px 6px rgba(0,0,0,0.2)\",\n        3: \"2px 2px 7px rgba(0,0,0,0.2)\"\n    },\n    effect: {\n        glow: `drop-shadow(0px 0px 5px ${primaryColor})`\n    },\n    mediaQuery: {\n        mobileS: \"320px\",\n        mobileM: \"375px\",\n        mobileL: \"425px\",\n        tablet: \"768px\",\n        laptop: \"1024px\",\n        laptopL: \"1440px\",\n        fourK: \"2560px\"\n    }\n};\n","import { createGlobalStyle } from \"styled-components/macro\";\nimport { ThemeType } from \"./theme\";\n\nexport const GlobalStyles = createGlobalStyle<{ theme: ThemeType }>`\n  // Import the font link into the project\n  @import url('${({ theme }) => theme.font.source}');\n\n  *,\n  *::after,\n  *::before {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n  }\n\n  *:focus {\n    outline: none;\n  }\n\n  *::selection {\n  }\n\n  html,\n  body {\n    height: 100%;\n  }\n\n  html {\n    scroll-behavior: smooth;\n  }\n\n  h1 {\n    padding: 0;\n    margin: 0;\n  }\n\n  body {\n    font-family: ${({ theme }) => theme.font.family.default}; // Make a default font actually default\n    font-weight: 500;\n    color: #000;\n  }\n\n  ul,\n  li {\n    list-style: none;\n  }\n\n  a {\n    text-decoration: none;\n  }\n\n  img {\n    max-width: 100%;\n    height: auto;\n    display: block;\n  }\n\n  button,\n  input {\n    outline: none;\n  }\n\n  button {\n    cursor: pointer;\n  }\n\n  textarea {\n    resize: none;\n  }\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store/store\";\nimport { ThemeProvider } from \"styled-components\";\nimport { theme } from \"./styles/theme\";\nimport { GlobalStyles } from \"./styles/GlobalStyles\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <ThemeProvider theme={theme}>\n                <GlobalStyles />\n                <HashRouter>\n                    <App />\n                </HashRouter>\n            </ThemeProvider>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}